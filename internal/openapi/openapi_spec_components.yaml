# https://raw.githubusercontent.com/OAI/OpenAPI-Specification/refs/heads/main/schemas/v3.1/schema.yaml
openapi: 3.0.3
info:
  title: API
  version: "0.0.1"
  description: >
    Crypto REST API

components:
  parameters:
    ElasticKeyQueryParamElasticKeyIds:
      name: elasticKeyID
      in: query
      description: Filter by the Elastic Key ID (UUID).
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ElasticKeyId'
      style: form
      explode: true
    ElasticKeyQueryParamNames:
      name: name
      in: query
      description: Filter by the Elastic Key name.
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ElasticKeyName'
      style: form
      explode: true
    ElasticKeyQueryParamProviders:
      name: provider
      in: query
      description: Filter by Elastic Key provider.
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ElasticKeyProvider'
      style: form
      explode: true
    ElasticKeyQueryParamAlgorithms:
      name: algorithm
      in: query
      description: Filter by cryptographic algorithm.
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ElasticKeyAlgorithm'
      style: form
      explode: true
    ElasticKeyQueryParamVersioningAllowed:
      name: versioning_allowed
      in: query
      description: Filter by whether versioning is allowed.
      required: false
      schema:
        $ref: '#/components/schemas/ElasticKeyVersioningAllowed'
    ElasticKeyQueryParamImportAllowed:
      name: import_allowed
      in: query
      description: Filter by whether import is allowed.
      required: false
      schema:
        $ref: '#/components/schemas/ElasticKeyImportAllowed'
    ElasticKeyQueryParamExportAllowed:
      name: export_allowed
      in: query
      description: Filter by whether export is allowed.
      required: false
      schema:
        $ref: '#/components/schemas/ElasticKeyExportAllowed'
    ElasticKeyQueryParamStatuses:
      name: status
      in: query
      description: Filter by the Elastic Key status.
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ElasticKeyStatus'
      style: form
      explode: true
    ElasticKeyQueryParamSorts:
      name: sort
      in: query
      description: Specify sorting as `fieldName:direction` (e.g., `name:asc`). Repeat parameter for multiple sort fields.
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ElasticKeySort'
      style: form
      explode: true
    ElasticKeyQueryParamPageNumber:
      name: page
      in: query
      schema:
        $ref: '#/components/schemas/PageNumber'
    ElasticKeyQueryParamPageSize:
      name: size
      in: query
      schema:
        $ref: '#/components/schemas/PageSize'

    MaterialKeyQueryParamElasticKeyIds:
      name: elasticKeyID
      in: query
      description: Filter by the Elastic Key ID (uuid).
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ElasticKeyId'
      style: form
      explode: true
    MaterialKeyQueryParamMaterialKeyIds:
      name: materialKeyID
      in: query
      description: Filter by the Material Key ID.
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/MaterialKeyId'
      style: form
      explode: true
    MaterialKeyQueryParamMinimumGenerateDate:
      name: min_generate_date
      in: query
      description: Filter by the Material Key minimum generate date (inclusive).
      required: false
      schema:
        $ref: '#/components/schemas/MaterialKeyGenerateDate'
    MaterialKeyQueryParamMaximumGenerateDate:
      name: max_generate_date
      in: query
      description: Filter by the Material Key maximum generate date (inclusive).
      required: false
      schema:
        $ref: '#/components/schemas/MaterialKeyGenerateDate'
    MaterialKeyQueryParamMinimumImportDate:
      name: min_import_date
      in: query
      description: Filter by the Material Key minimum import date (inclusive).
      required: false
      schema:
        $ref: '#/components/schemas/MaterialKeyImportDate'
    MaterialKeyQueryParamMaximumImportDate:
      name: max_import_date
      in: query
      description: Filter by the Material Key maximum import date (inclusive).
      required: false
      schema:
        $ref: '#/components/schemas/MaterialKeyImportDate'
    MaterialKeyQueryParamMinimumExpirationDate:
      name: min_expiration_date
      in: query
      description: Filter by the Material Key minimum expiration date (inclusive).
      required: false
      schema:
        $ref: '#/components/schemas/MaterialKeyExpirationDate'
    MaterialKeyQueryParamMaximumExpirationDate:
      name: max_expiration_date
      in: query
      description: Filter by the Material Key maximum expiration date (inclusive).
      required: false
      schema:
        $ref: '#/components/schemas/MaterialKeyExpirationDate'
    MaterialKeyQueryParamMinimumRevocationDate:
      name: min_revocation_date
      in: query
      description: Filter by the Material Key minimum revocation date (inclusive).
      required: false
      schema:
        $ref: '#/components/schemas/MaterialKeyRevocationDate'
    MaterialKeyQueryParamMaximumRevocationDate:
      name: max_revocation_date
      in: query
      description: Filter by the Material Key maximum revocation date (inclusive).
      required: false
      schema:
        $ref: '#/components/schemas/MaterialKeyRevocationDate'
    MaterialKeyQueryParamSorts:
      name: sort
      in: query
      description: Specify sorting as `fieldName:direction` (e.g., `materialKeyID:asc`). Repeat parameter for multiple sort fields.
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/MaterialKeySort'
      style: form
      explode: true
    MaterialKeyQueryParamPageNumber:
      name: page
      in: query
      schema:
        $ref: '#/components/schemas/PageNumber'
    MaterialKeyQueryParamPageSize:
      name: size
      in: query
      schema:
        $ref: '#/components/schemas/PageSize'

  schemas:
    PageNumber:
      type: integer
      description: Page number starting at 0.
      minimum: 0
      example: 0
    PageSize:
      type: integer
      description: Page number.
      minimum: 2
      maximum: 50
      example: 25

    ElasticKeyCreate:
      type: object
      required: [ name, description ]
      properties:
        name:
          $ref: '#/components/schemas/ElasticKeyName'
        description:
          $ref: '#/components/schemas/ElasticKeyDescription'
        algorithm:
          $ref: '#/components/schemas/ElasticKeyAlgorithm'
        provider:
          $ref: '#/components/schemas/ElasticKeyProvider'
        versioning_allowed:
          $ref: '#/components/schemas/ElasticKeyVersioningAllowed'
        import_allowed:
          $ref: '#/components/schemas/ElasticKeyImportAllowed'
        export_allowed:
          $ref: '#/components/schemas/ElasticKeyExportAllowed'

    ElasticKey:
      type: object
      properties:
        elasticKeyID:
          $ref: '#/components/schemas/ElasticKeyId'
        name:
          $ref: '#/components/schemas/ElasticKeyName'
        description:
          $ref: '#/components/schemas/ElasticKeyDescription'
        provider:
          $ref: '#/components/schemas/ElasticKeyProvider'
        algorithm:
          $ref: '#/components/schemas/ElasticKeyAlgorithm'
        versioning_allowed:
          $ref: '#/components/schemas/ElasticKeyVersioningAllowed'
        import_allowed:
          $ref: '#/components/schemas/ElasticKeyImportAllowed'
        export_allowed:
          $ref: '#/components/schemas/ElasticKeyExportAllowed'
        status:
          $ref: '#/components/schemas/ElasticKeyStatus'

    ElasticKeyUpdate:
      type: object
      required: [ name, description ]
      properties:
        name:
          $ref: '#/components/schemas/ElasticKeyName'
        description:
          $ref: '#/components/schemas/ElasticKeyDescription'

    MaterialKeyGenerate:
      type: object
      additionalProperties: false

    MaterialKeyUpdate:
      type: object
      required: [ elasticKeyID, materialKeyID ]
      properties:
        elasticKeyID:
          $ref: '#/components/schemas/ElasticKeyId'
        materialKeyID:
          $ref: '#/components/schemas/MaterialKeyId'

    MaterialKey:
      type: object
      required: [ elasticKeyID, materialKeyID ]
      properties:
        elasticKeyID:
          $ref: '#/components/schemas/ElasticKeyId'
        materialKeyID:
          $ref: '#/components/schemas/MaterialKeyId'
        generate_date:
          $ref: '#/components/schemas/MaterialKeyGenerateDate'
        import_date:
          $ref: '#/components/schemas/MaterialKeyImportDate'
        expiration_date:
          $ref: '#/components/schemas/MaterialKeyExpirationDate'
        revocation_date:
          $ref: '#/components/schemas/MaterialKeyRevocationDate'
        public:
          $ref: '#/components/schemas/MaterialKeyPublic'
        encrypted:
          $ref: '#/components/schemas/MaterialKeyEncrypted'
        decrypted:
          $ref: '#/components/schemas/MaterialKeyDecrypted'
          
    ElasticKeyId:
      type: string
      format: uuid
      description: Unique UUID for an Elastic Key.
    ElasticKeyName:
      type: string
      description: Friendly name for an Elastic Key.
      example: Payroll Database
      minLength: 1
      maxLength: 63
    ElasticKeyDescription:
      type: string
      description: Description for an Elastic Key.
      example: This Elastic Key is used to encrypt the Payroll Database
      minLength: 1
      maxLength: 255
    ElasticKeyAlgorithm:
      type: string
      enum: 
        - "A256GCM/A256KW"
        - "A192GCM/A256KW"
        - "A128GCM/A256KW"
        - "A256GCM/A192KW"
        - "A192GCM/A192KW"
        - "A128GCM/A192KW"
        - "A256GCM/A128KW"
        - "A192GCM/A128KW"
        - "A128GCM/A128KW"
        - "A256GCM/A256GCMKW"
        - "A192GCM/A256GCMKW"
        - "A128GCM/A256GCMKW"
        - "A256GCM/A192GCMKW"
        - "A192GCM/A192GCMKW"
        - "A128GCM/A192GCMKW"
        - "A256GCM/A128GCMKW"
        - "A192GCM/A128GCMKW"
        - "A128GCM/A128GCMKW"
        - "A256GCM/dir"
        - "A192GCM/dir"
        - "A128GCM/dir"
        - "A256GCM/RSA-OAEP-512"
        - "A192GCM/RSA-OAEP-512"
        - "A128GCM/RSA-OAEP-512"
        - "A256GCM/RSA-OAEP-384"
        - "A192GCM/RSA-OAEP-384"
        - "A128GCM/RSA-OAEP-384"
        - "A256GCM/RSA-OAEP-256"
        - "A192GCM/RSA-OAEP-256"
        - "A128GCM/RSA-OAEP-256"
        - "A256GCM/RSA-OAEP"
        - "A192GCM/RSA-OAEP"
        - "A128GCM/RSA-OAEP"
        - "A256GCM/RSA1_5"
        - "A192GCM/RSA1_5"
        - "A128GCM/RSA1_5"
        - "A256GCM/ECDH-ES+A256KW"
        - "A192GCM/ECDH-ES+A256KW"
        - "A128GCM/ECDH-ES+A256KW"
        - "A256GCM/ECDH-ES+A192KW"
        - "A192GCM/ECDH-ES+A192KW"
        - "A128GCM/ECDH-ES+A192KW"
        - "A256GCM/ECDH-ES+A128KW"
        - "A192GCM/ECDH-ES+A128KW"
        - "A128GCM/ECDH-ES+A128KW"
        - "A256GCM/ECDH-ES"
        - "A192GCM/ECDH-ES"
        - "A128GCM/ECDH-ES"
        - "A256CBC-HS512/A256KW"
        - "A192CBC-HS384/A256KW"
        - "A128CBC-HS256/A256KW"
        - "A256CBC-HS512/A192KW"
        - "A192CBC-HS384/A192KW"
        - "A128CBC-HS256/A192KW"
        - "A256CBC-HS512/A128KW"
        - "A192CBC-HS384/A128KW"
        - "A128CBC-HS256/A128KW"
        - "A256CBC-HS512/A256GCMKW"
        - "A192CBC-HS384/A256GCMKW"
        - "A128CBC-HS256/A256GCMKW"
        - "A256CBC-HS512/A192GCMKW"
        - "A192CBC-HS384/A192GCMKW"
        - "A128CBC-HS256/A192GCMKW"
        - "A256CBC-HS512/A128GCMKW"
        - "A192CBC-HS384/A128GCMKW"
        - "A128CBC-HS256/A128GCMKW"
        - "A256CBC-HS512/dir"
        - "A192CBC-HS384/dir"
        - "A128CBC-HS256/dir"
        - "A256CBC-HS512/RSA-OAEP-512"
        - "A192CBC-HS384/RSA-OAEP-512"
        - "A128CBC-HS256/RSA-OAEP-512"
        - "A256CBC-HS512/RSA-OAEP-384"
        - "A192CBC-HS384/RSA-OAEP-384"
        - "A128CBC-HS256/RSA-OAEP-384"
        - "A256CBC-HS512/RSA-OAEP-256"
        - "A192CBC-HS384/RSA-OAEP-256"
        - "A128CBC-HS256/RSA-OAEP-256"
        - "A256CBC-HS512/RSA-OAEP"
        - "A192CBC-HS384/RSA-OAEP"
        - "A128CBC-HS256/RSA-OAEP"
        - "A256CBC-HS512/RSA1_5"
        - "A192CBC-HS384/RSA1_5"
        - "A128CBC-HS256/RSA1_5"
        - "A256CBC-HS512/ECDH-ES+A256KW"
        - "A192CBC-HS384/ECDH-ES+A256KW"
        - "A128CBC-HS256/ECDH-ES+A256KW"
        - "A256CBC-HS512/ECDH-ES+A192KW"
        - "A192CBC-HS384/ECDH-ES+A192KW"
        - "A128CBC-HS256/ECDH-ES+A192KW"
        - "A256CBC-HS512/ECDH-ES+A128KW"
        - "A192CBC-HS384/ECDH-ES+A128KW"
        - "A128CBC-HS256/ECDH-ES+A128KW"
        - "A256CBC-HS512/ECDH-ES"
        - "A192CBC-HS384/ECDH-ES"
        - "A128CBC-HS256/ECDH-ES"
        - "RS256"
        - "RS384"
        - "RS512"
        - "PS256"
        - "PS384"
        - "PS512"
        - "ES256"
        - "ES384"
        - "ES512"
        - "HS256"
        - "HS384"
        - "HS512"
        - "EdDSA"
      example: "A256GCM/A256KW"
      description: Cryptographic algorithm(s) used for Material Keys in the Elastic Key. The first is the content encryption algorithm, and the second is the optional key encryption algorithm.
                   If key encryption algorithm is 'dir', the Elastic Key Key is directly used on values. direct encryption is useful for small values.
                   If key encryption algorithm is 'K*W', a random Content Encryption Key (CEK) is used directly on values, and the Elastic Key Key is used to encrypt the CEK. Key wrap is useful for large values (e.g. files, blobs, etc).
                   If in doubt, it is safe to use 'A256GCM/A256KW' for all values; it is the default.
    ElasticKeyProvider:
      type: string
      enum: [ Internal ]
      example: "Internal"
      description: Provider of the Elastic Key management service.
    ElasticKeyVersioningAllowed:
      type: boolean
      example: true
      description: Indicates if the Elastic Key supports versioning.
    ElasticKeyImportAllowed:
      type: boolean
      example: false
      description: Indicates if the Elastic Key supports import (BYOK).
    ElasticKeyExportAllowed:
      type: boolean
      example: false
      description: Indicates if the Elastic Key supports export.
    ElasticKeyStatus:
      type: string
      enum:
        - "creating"
        - "import_failed"
        - "pending_import"
        - "pending_generate"
        - "generate_failed"
        - "active"
        - "disabled"
        - "pending_delete_was_import_failed"
        - "pending_delete_was_pending_import"
        - "pending_delete_was_active"
        - "pending_delete_was_disabled"
        - "pending_delete_was_generate_failed"
        - "started_delete"
        - "finished_delete"
      example: "creating"
      description: Status of the Elastic Key.
    ElasticKeySort:
      type: string
      enum:
        - "elasticKeyID:ASC"
        - "elasticKeyID:DESC"
        - "name:ASC"
        - "name:DESC"
        - "provider:ASC"
        - "provider:DESC"
        - "algorithm:ASC"
        - "algorithm:DESC"
        - "versioning_allowed:ASC"
        - "versioning_allowed:DESC"
        - "import_allowed:ASC"
        - "import_allowed:DESC"
        - "export_allowed:ASC"
        - "export_allowed:DESC"
        - "status:ASC"
        - "status:DESC"

    MaterialKeyId:
      type: string
      format: uuid
      description: Unique UUID for a Material Key.
    MaterialKeyGenerateDate:
      type: string
      format: date-time
      example: "2025-03-14T12:00:00Z"
      description: ISO 8601 UTC timestamp of Material Key generation.
    MaterialKeyImportDate:
      type: string
      format: date-time
      example: "2025-03-14T12:00:00Z"
      description: ISO 8601 UTC timestamp of Material Key generation.
    MaterialKeyExpirationDate:
      type: string
      format: date-time
      example: "2025-03-14T12:00:00Z"
      description: ISO 8601 UTC timestamp of Material Key generation.
    MaterialKeyRevocationDate:
      type: string
      format: date-time
      example: "2025-03-14T12:00:00Z"
      description: ISO 8601 UTC timestamp of Material Key generation.
    MaterialKeyPublic:
      type: string
      description: Clear public key Material Key (if applicable)
    MaterialKeyEncrypted:
      type: string
      description: Encrypted private or secret key Material Key (if ElasticKey exportAllowed=true)
    MaterialKeyDecrypted:
      type: string
      description: Clear private or secret key Material Key (if ElasticKey exportAllowed=true)
    MaterialKeySort:
      type: string
      enum:
        - "elasticKeyID"
        - "elasticKeyID:ASC"
        - "elasticKeyID:DESC"
        - "materialKeyID"
        - "materialKeyID:ASC"
        - "materialKeyID:DESC"
        - "generate_date"
        - "generate_date:ASC"
        - "generate_date:DESC"

    EncryptContext:
      type: string
      pattern: '^[A-Za-z0-9_-]+$'
      description: Base64URL-encoded context. This is non-secret data used for authentication and integrity checking during decryption (e.g. namespace, context).

    SignContext:
      type: string
      pattern: '^[A-Za-z0-9_-]+$'
      description: Base64URL-encoded context Authenticated Data (AAD). This is non-secret data used for integrity checking during verify (e.g. namespace, context).

    ElasticKeysQueryParams:
      type: object
      properties:
        elasticKeyID:
          type: array
          items:
            $ref: '#/components/schemas/ElasticKeyId'
        name:
          type: array
          items:
            $ref: '#/components/schemas/ElasticKeyName'
        provider:
          type: array
          items:
            $ref: '#/components/schemas/ElasticKeyProvider'
        algorithm:
          type: array
          items:
            $ref: '#/components/schemas/ElasticKeyAlgorithm'
        versioning_allowed:
          $ref: '#/components/schemas/ElasticKeyVersioningAllowed'
        import_allowed:
          $ref: '#/components/schemas/ElasticKeyImportAllowed'
        export_allowed:
          $ref: '#/components/schemas/ElasticKeyExportAllowed'
        status:
          type: array
          items:
            $ref: '#/components/schemas/ElasticKeyStatus'
        sort:
          type: array
          items:
            $ref: '#/components/schemas/ElasticKeySort'
        page:
          $ref: '#/components/schemas/PageNumber'
        size:
          $ref: '#/components/schemas/PageSize'

    ElasticKeyMaterialKeysQueryParams:
      type: object
      properties:
        materialKeyID:
          type: array
          items:
            $ref: '#/components/schemas/MaterialKeyId'
        min_generate_date:
          $ref: '#/components/schemas/MaterialKeyGenerateDate'
        max_generate_date:
          $ref: '#/components/schemas/MaterialKeyGenerateDate'
        min_import_date:
          $ref: '#/components/schemas/MaterialKeyImportDate'
        max_import_date:
          $ref: '#/components/schemas/MaterialKeyImportDate'
        min_expiration_date:
          $ref: '#/components/schemas/MaterialKeyExpirationDate'
        max_expiration_date:
          $ref: '#/components/schemas/MaterialKeyExpirationDate'
        min_revocation_date:
          $ref: '#/components/schemas/MaterialKeyRevocationDate'
        max_revocation_date:
          $ref: '#/components/schemas/MaterialKeyRevocationDate'
        sort:
          type: array
          items:
            $ref: '#/components/schemas/MaterialKeySort'
        page:
          $ref: '#/components/schemas/PageNumber'
        size:
          $ref: '#/components/schemas/PageSize'

    MaterialKeysQueryParams:
      type: object
      properties:
        elasticKeyID:
          type: array
          items:
            $ref: '#/components/schemas/ElasticKeyId'
        materialKeyID:
          type: array
          items:
            $ref: '#/components/schemas/MaterialKeyId'
        min_generate_date:
          $ref: '#/components/schemas/MaterialKeyGenerateDate'
        max_generate_date:
          $ref: '#/components/schemas/MaterialKeyGenerateDate'
        min_import_date:
          $ref: '#/components/schemas/MaterialKeyImportDate'
        max_import_date:
          $ref: '#/components/schemas/MaterialKeyImportDate'
        min_expiration_date:
          $ref: '#/components/schemas/MaterialKeyExpirationDate'
        max_expiration_date:
          $ref: '#/components/schemas/MaterialKeyExpirationDate'
        min_revocation_date:
          $ref: '#/components/schemas/MaterialKeyRevocationDate'
        max_revocation_date:
          $ref: '#/components/schemas/MaterialKeyRevocationDate'
        sort:
          type: array
          items:
            $ref: '#/components/schemas/MaterialKeySort'
        page:
          $ref: '#/components/schemas/PageNumber'
        size:
          $ref: '#/components/schemas/PageSize'

    EncryptParams:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/EncryptContext'

    EncryptRequest:
      type: string
      description: Clear text to be encrypted. If you need to encrypt bytes, encode them first as text (e.g. Hexadecimal, Base64, Base64-URL, Base64-MIME, etc).
    EncryptResponse:
      type: string
      pattern: '^[A-Za-z0-9_-]+\.[A-Za-z0-9_-]*\.[A-Za-z0-9_-]+\.[A-Za-z0-9_-]*\.[A-Za-z0-9_-]+$'
      description: >
        Base64Url-encoded JSON Web Encryption (JWE) of the encrypted bytes (and non-secret cipher parameters) in compact serialized format. See RFC 7516 JSON Web Encryption (JWE) for more details.
        Compact serialized format is 'Header.EncryptedKey.IV.Ciphertext.AuthenticationTag'. There are five Base64Url-encoded parts and separated by '.'. Some parts can be empty depending on the 'alg' and 'enc' headers parameters.
        - Header: Required base64Url-encoded JSON key/values for the JWE.
        - EncryptedKey: Optional base64Url-encoded JWE of an encrypted symmetric key used to encrypt the payload. This is non-empty for envelope encryption (e.g. alg=a256gcmkw), or empty for direct encryption (e.g. alg=dir).
        - IV: Required base64Url-encoded Initialization Vector (IV) used for encryption. For AES-GCM or AES-GCM-SIV it contains a 12-bytes nonce. For AES-CBC it contains a 16-bytes IV.
        - Ciphertext: Required base64Url-encoded encrypted secret bytes. It is always non-empty. For AES-GCM or AES-GCM-SIV it contains same number of bytes as the plaintext.
        - AuthenticationTag: Required base64Url-encoded authentication tag used for encryption. For AES-GCM or AES-GCM-SIV it contains a 16-bytes authentication tag. For AES-CBC-HMAC it contains a N-bytes HMAC hash.
    DecryptRequest:
      type: string
      pattern: '^[A-Za-z0-9_-]+\.[A-Za-z0-9_-]*\.[A-Za-z0-9_-]+\.[A-Za-z0-9_-]*\.[A-Za-z0-9_-]+$'
      description: >
        Base64Url-encoded JSON Web Encryption (JWE) of the encrypted bytes (and non-secret cipher parameters) in compact serialized format. See RFC 7516 JSON Web Encryption (JWE) for more details.
        Compact serialized format is 'Header.EncryptedKey.IV.Ciphertext.AuthenticationTag'. There are five Base64Url-encoded parts and separated by '.'. Some parts can be empty depending on the 'alg' and 'enc' headers parameters.
        - Header: Required base64Url-encoded JSON key/values for the JWE.
        - EncryptedKey: Optional base64Url-encoded JWE of an encrypted symmetric key used to encrypt the payload. This is non-empty for envelope encryption (e.g. alg=a256gcmkw), or empty for direct encryption (e.g. alg=dir).
        - IV: Required base64Url-encoded Initialization Vector (IV) used for encryption. For AES-GCM or AES-GCM-SIV it contains a 12-bytes nonce. For AES-CBC it contains a 16-bytes IV.
        - Ciphertext: Required base64Url-encoded encrypted secret bytes. It is always non-empty. For AES-GCM or AES-GCM-SIV it contains same number of bytes as the plaintext.
        - AuthenticationTag: Required base64Url-encoded authentication tag used for encryption. For AES-GCM or AES-GCM-SIV it contains a 16-bytes authentication tag. For AES-CBC-HMAC it contains a N-bytes HMAC hash.
    DecryptResponse:
      type: string
      description: Decrypted text. If you pre-encoded bytes to text before submitting them for encryption, remember to decode to bytes; use the same encoding scheme you chose before submission (e.g. Hexadecimal, Base64, Base64-URL, Base64-MIME, etc).

    SignParams:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/SignContext'

    SignRequest:
      type: string
      description: Clear text to be signed. Can be JSON-encoded to create a JWT, or freeform to create a JWS. If you need freeform, encode as text (e.g. Base64-URL, Base64-MIME, Base64, Hexadecimal, etc).
    SignResponse:
      type: string
      pattern: '^[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+$'
      description: >
        Base64Url-encoded JSON Web Signature (JWS) of the clear text in compact serialized format. See RFC 7515 JSON Web Signature (JWS) for more details.
        Compact serialized format is 'Header.Payload.Signature'. There are three Base64Url-encoded parts and separated by '.'.
        - Header: Required base64Url-encoded JSON key/values for the JWS.
        - Plaintext: Required base64Url-encoded clear text. It is always non-empty. Can be freeform (JWS) or JSON-encoded (JWT).
        - Signature: Required base64Url-encoded signature.
    VerifyRequest:
      type: string
      pattern: '^[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+$'
      description: >
        Base64Url-encoded JSON Web Signature (JWS) of the clear text in compact serialized format. See RFC 7515 JSON Web Signature (JWS) for more details.
        Compact serialized format is 'Header.Payload.Signature'. There are three Base64Url-encoded parts and separated by '.'.
        - Header: Required base64Url-encoded JSON key/values for the JWS.
        - Plaintext: Required base64Url-encoded clear text. It is always non-empty. Can be freeform (JWS) or JSON-encoded (JWT).
        - Signature: Required base64Url-encoded signature.
    VerifyResponse:
      type: string
      description: Optional message about verification result

    HTTPError:
      type: object
      required: [ status, error, message ]
      properties:
        status:
          type: integer
          description: HTTP status code
          minimum: 400
          maximum: 599
        error:
          type: string
          description: HTTP status message
          minLength: 1
        message:
          type: string
          description: Detailed error message
          minLength: 1

  responses:
    HTTP400BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/HTTPError'
              - type: object
                properties:
                  status:
                    type: integer
                    example: 400
                    minimum: 400
                    maximum: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: string
                    example: "The request could not be understood or was missing required parameters."

    HTTP401Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/HTTPError'
              - type: object
                properties:
                  status:
                    type: integer
                    example: 401
                    minimum: 401
                    maximum: 401
                  error:
                    type: string
                    example: "Unauthorized"
                  message:
                    type: string
                    example: "Authentication failed or user does not have permissions for the desired action."

    HTTP403Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/HTTPError'
              - type: object
                properties:
                  status:
                    type: integer
                    example: 403
                    minimum: 403
                    maximum: 403
                  error:
                    type: string
                    example: "Forbidden"
                  message:
                    type: string
                    example: "Authentication succeeded but the authenticated user does not have access to the resource."

    HTTP404NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/HTTPError'
              - type: object
                properties:
                  status:
                    type: integer
                    example: 404
                    minimum: 404
                    maximum: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "The requested resource could not be found."

    HTTP429TooManyRequests:
      description: Too Many Requests
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/HTTPError'
              - type: object
                properties:
                  status:
                    type: integer
                    example: 429
                    minimum: 429
                    maximum: 429
                  error:
                    type: string
                    example: "Too Many Requests"
                  message:
                    type: string
                    example: "You have sent too many requests in a given amount of time."

    HTTP500InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/HTTPError'
              - type: object
                properties:
                  status:
                    type: integer
                    example: 500
                    minimum: 500
                    maximum: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: string
                    example: "An unexpected error occurred on the server."

    HTTP502BadGateway:
      description: Bad Gateway
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/HTTPError'
              - type: object
                properties:
                  status:
                    type: integer
                    example: 502
                    minimum: 502
                    maximum: 502
                  error:
                    type: string
                    example: "Bad Gateway"
                  message:
                    type: string
                    example: "The server received an invalid response from the upstream server."

    HTTP503ServiceUnavailable:
      description: Service Unavailable
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/HTTPError'
              - type: object
                properties:
                  status:
                    type: integer
                    example: 503
                    minimum: 503
                    maximum: 503
                  error:
                    type: string
                    example: "Service Unavailable"
                  message:
                    type: string
                    example: "The server is currently unable to handle the request due to temporary overload or maintenance."

    HTTP504GatewayTimeout:
      description: Gateway Timeout
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/HTTPError'
              - type: object
                properties:
                  status:
                    type: integer
                    example: 504
                    minimum: 504
                    maximum: 504
                  error:
                    type: string
                    example: "Gateway Timeout"
                  message:
                    type: string
                    example: "The server did not receive a timely response from the upstream server."
