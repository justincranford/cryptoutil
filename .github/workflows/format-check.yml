name: Code Formatting Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  format-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'  # Match your project's Go version

    - name: Install formatting tools
      run: |
        go install mvdan.cc/gofumpt@v0.7.0
        go install golang.org/x/tools/cmd/goimports@latest

    - name: Check gofumpt formatting
      run: |
        # Check if any files need gofumpt formatting
        UNFORMATTED=$(gofumpt -l .)
        if [ -n "$UNFORMATTED" ]; then
          echo "❌ The following files need gofumpt formatting:"
          echo "$UNFORMATTED"
          echo ""
          echo "Please run: gofumpt -w ."
          echo "Or install pre-commit hooks: pip install pre-commit && pre-commit install"
          exit 1
        else
          echo "✅ All Go files are properly formatted with gofumpt"
        fi

    - name: Check goimports formatting
      run: |
        # Check if any files need goimports formatting
        UNFORMATTED=$(goimports -l .)
        if [ -n "$UNFORMATTED" ]; then
          echo "❌ The following files need goimports formatting:"
          echo "$UNFORMATTED"
          echo ""
          echo "Please run: goimports -w ."
          echo "Or install pre-commit hooks: pip install pre-commit && pre-commit install"
          exit 1
        else
          echo "✅ All Go files have properly organized imports"
        fi

    - name: Go vet
      run: go vet ./...

    - name: Build check
      run: go build ./...
